# .github/workflows/dependabot-auto-merge.yml
name: Dependabot Auto-Merge (Native)

on:
  pull_request:
    types: [opened, reopened, synchronize, ready_for_review]

permissions:
  contents: write          # required to toggle auto-merge
  pull-requests: write     # required to create a review/approval
  checks: read
  statuses: read

jobs:
  automerge:
    if: >
      github.event_name == 'pull_request' &&
      github.event.pull_request.user.login == 'dependabot[bot]'
    runs-on: ubuntu-latest

    concurrency:
      group: dependabot-automerge-${{ github.event.pull_request.number }}
      cancel-in-progress: false

    steps:
      - name: Fetch Dependabot metadata
        id: meta
        uses: dependabot/fetch-metadata@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Approve PR (native)
        if: ${{ !github.event.pull_request.draft }}
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo } = context.repo;
            const number = context.payload.pull_request.number;
            await github.rest.pulls.createReview({
              owner,
              repo,
              pull_number: number,
              event: 'APPROVE',
              body: 'Automated approval for Dependabot PR.'
            });
            core.info(`Approved PR #${number}`);

      - name: Enable auto-merge (squash, native)
        if: ${{ !github.event.pull_request.draft }}
        uses: actions/github-script@v8
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request; // includes node_id
            const mutation = `
              mutation Enable($pullRequestId: ID!, $mergeMethod: PullRequestMergeMethod!) {
                enablePullRequestAutoMerge(input: { pullRequestId: $pullRequestId, mergeMethod: $mergeMethod }) {
                  pullRequest { number state autoMergeRequest { enabledAt } }
                }
              }
            `;
            try {
              const res = await github.graphql(mutation, {
                pullRequestId: pr.node_id,
                mergeMethod: "SQUASH"
              });
              core.info(`Auto-merge enabled on PR #${res.enablePullRequestAutoMerge.pullRequest.number}`);
            } catch (e) {
              core.warning(`Could not enable auto-merge: ${e.message}`);
              core.warning('Verify repository setting "Allow auto-merge" is ON and branch protection allows it.');
              throw e;
            }
