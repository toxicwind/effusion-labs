name: Build and Deploy to GHCR

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  NODE_VERSION: '20'
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }} # e.g., owner/repo
  # Set default platform; add linux/arm64 if you need multi-arch
  PLATFORMS: linux/amd64

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # helps metadata (semver tags) if you add them later

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Optional: browsers/deps for Playwright tests; your scripts already guard with "|| true"
      - name: Install Playwright bits (optional)
        run: |
          npm run deps:playwright
          npm run deps:system

      - name: Run tests (targeted if available)
        run: npm test

      # Optional: fast failure before building Docker image
      - name: Verify Eleventy build locally
        run: npm run build

      - name: Set up QEMU (for multi-arch; safe to keep even if single arch)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Generate image tags/labels (latest + sha)
      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,prefix=,format=short

      - name: Build and push (cached)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          pull: true
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.PLATFORMS }}
          # Pass commit SHA into image for Eleventy build-info
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          # BuildKit cache to speed up rebuilds
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Trigger Portainer Webhook Redeployment
        if: ${{ success() }}
        env:
          PORTAINER_WEBHOOK_URL: ${{ secrets.PORTAINER_WEBHOOK_URL }}
        run: |
          if [ -z "$PORTAINER_WEBHOOK_URL" ]; then
            echo "PORTAINER_WEBHOOK_URL secret is not set. Skipping redeploy."
            exit 0
          fi
          echo "Triggering Portainer redeployâ€¦"
          curl -fsSL -X POST "$PORTAINER_WEBHOOK_URL" || {
            echo "Webhook trigger failed"; exit 1;
          }
