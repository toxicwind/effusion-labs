name: CI & Production Deployment

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  pre_deployment_checks:
    name: Run Code Validation & Pre-Deployment Checks
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: ⬇️ Checkout repository code
        uses: actions/checkout@v4

      - name: ⚙️ Set up Node.js (from .nvmrc)
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: 📦 Install NPM dependencies
        run: npm ci --ignore-scripts

      - name: 🧪 Run unit tests with code coverage
        run: npm test

      - name: 🔨 Run Eleventy build for validation
        run: npm run build

      - name: ⬆️ Upload coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  publish_and_deploy:
    name: Publish Images & Trigger Production Deployment
    needs: pre_deployment_checks
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: ⬇️ Checkout repository code
        uses: actions/checkout@v4

      - name: 🐳 Setup Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔑 Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # ── Web image (effusion-labs)
      - name: 🏷️ Metadata (web)
        id: meta_web
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/toxicwind/effusion-labs
          tags: |
            # keep Portainer happy
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=main,enable={{is_default_branch}}
            # useful extras
            type=sha
      - name: 🏗️ Build & Push (web)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./.portainer/Dockerfile
          push: true
          tags: ${{ steps.meta_web.outputs.tags }}
          labels: ${{ steps.meta_web.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: COMMIT_SHA=${{ github.sha }}

      # ── Gateway image (distinct name)
      - name: 🏷️ Metadata (gateway)
        id: meta_gateway
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/toxicwind/markdown-gateway
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=raw,value=main,enable={{is_default_branch}}
            type=sha
      - name: 🏗️ Build & Push (gateway)
        uses: docker/build-push-action@v6
        with:
          context: ./markdown_gateway
          push: true
          tags: ${{ steps.meta_gateway.outputs.tags }}
          labels: ${{ steps.meta_gateway.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: 🚀 Trigger Portainer redeploy
        env:
          HOOK: ${{ secrets.PORTAINER_WEBHOOK_EFFUSION }}
        run: |
          echo "Triggering redeployment on Portainer…"
          curl --fail --retry-all-errors --retry 5 --retry-delay 3 -X POST "$HOOK"
          echo "Redeployment signal sent."
