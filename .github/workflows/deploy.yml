name: Deploy to GHCR

on:
  push:
    branches: [main]
  workflow_dispatch:

permissions:
  contents: read
  packages: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 40

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install deps
        run: npm ci --ignore-scripts

      - name: Build site
        run: npm run build

      - uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR (main only)
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build effusion-labs
        run: |
          IMAGE_ID=ghcr.io/${{ github.actor }}/effusion-labs:latest
          docker buildx build \
            -t "$IMAGE_ID" \
            --cache-to type=inline \
            --cache-from type=registry,ref=$IMAGE_ID \
            -f .portainer/Dockerfile . 

      - name: Push effusion-labs (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE_ID=ghcr.io/${{ github.actor }}/effusion-labs:latest
          docker buildx build \
            -t "$IMAGE_ID" \
            --cache-to type=inline \
            --cache-from type=registry,ref=$IMAGE_ID \
            -f .portainer/Dockerfile . --push

      - name: Build markdown_gateway
        run: |
          IMAGE_ID=ghcr.io/${{ github.actor }}/markdown_gateway:latest
          docker buildx build \
            -t "$IMAGE_ID" \
            --cache-to type=inline \
            --cache-from type=registry,ref=$IMAGE_ID \
            markdown_gateway

      - name: Push markdown_gateway (main only)
        if: github.ref == 'refs/heads/main'
        run: |
          IMAGE_ID=ghcr.io/${{ github.actor }}/markdown_gateway:latest
          docker buildx build \
            -t "$IMAGE_ID" \
            --cache-to type=inline \
            --cache-from type=registry,ref=$IMAGE_ID \
            markdown_gateway --push

      - name: Trigger Portainer redeploy (main only)
        if: github.ref == 'refs/heads/main'
        env:
          HOOK: ${{ secrets.PORTAINER_WEBHOOK_EFFUSION }}
        run: |
          curl --fail --retry 5 --retry-all-errors --retry-delay 2 -X POST "$HOOK"
