   #[1]RSS 2.0 [2]Atom 1.0 [3]JSON Feed

   (BUTTON) v4.1
   (BUTTON) ⌘KCtrl K[4]Docs[5]Blog[6]Showcase[7]Sponsor[8]Plus
   (BUTTON) (BUTTON)
   January 22, 2025

Tailwind CSS v4.0

   Adam Wathan
   [9]@adamwathan

   Tailwind CSS v4.0

   Holy shit it's actually done — we just tagged Tailwind CSS v4.0.

   Tailwind CSS v4.0 is an all-new version of the framework optimized for
   performance and flexibility, with a reimagined configuration and
   customization experience, and taking full advantage of the latest
   advancements the web platform has to offer.
     * [10]New high-performance engine — where full builds are up to 5x
       faster, and incremental builds are over 100x faster — and measured
       in microseconds.
     * [11]Designed for the modern web — built on cutting-edge CSS
       features like cascade layers, registered custom properties with
       @property, and color-mix().
     * [12]Simplified installation — fewer dependencies, zero
       configuration, and just a single line of code in your CSS file.
     * [13]First-party Vite plugin — tight integration for maximum
       performance and minimum configuration.
     * [14]Automatic content detection — all of your template files are
       discovered automatically, with no configuration required.
     * [15]Built-in import support — no additional tooling necessary to
       bundle multiple CSS files.
     * [16]CSS-first configuration — a reimagined developer experience
       where you customize and extend the framework directly in CSS
       instead of a JavaScript configuration file.
     * [17]CSS theme variables — all of your design tokens exposed as
       native CSS variables so you can access them anywhere.
     * [18]Dynamic utility values and variants — stop guessing what values
       exist in your spacing scale, or extending your configuration for
       things like basic data attributes.
     * [19]Modernized P3 color palette — a redesigned, more vivid color
       palette that takes full advantage of modern display technology.
     * [20]Container queries — first-class APIs for styling elements based
       on their container size, no plugins required.
     * [21]New 3D transform utilities — transform elements in 3D space
       directly in your HTML.
     * [22]Expanded gradient APIs — radial and conic gradients,
       interpolation modes, and more.
     * [23]@starting-style support — a new variant you can use to create
       enter and exit transitions, without the need for JavaScript.
     * [24]not-* variant — style an element only when it doesn't match
       another variant, custom selector, or media or feature query.
     * [25]Even more new utilities and variants — including support for
       color-scheme, field-sizing, complex shadows, inert, and more.

   Start using Tailwind CSS v4.0 today by [26]installing it in a new
   project, or playing with it directly in the browser on [27]Tailwind
   Play.

   For existing projects, we've published a comprehensive [28]upgrade
   guide and built an [29]automated upgrade tool to get you on the latest
   version as quickly and painlessly as possible.
     __________________________________________________________________

[30]New high-performance engine

   Tailwind CSS v4.0 is a ground-up rewrite of the framework, taking
   everything we've learned about the architecture over the years and
   optimizing it to be as fast as possible.

   When benchmarking it on our own projects, we've found full rebuilds to
   be over 3.5x faster, and incremental builds to be over 8x faster.

   Here are the median build times we saw when we benchmarked Tailwind CSS
   v4.0 against [31]Catalyst:
                                       v3.4  v4.0  Improvement
   Full build                          378ms 100ms 3.78x
   Incremental rebuild with new CSS    44ms  5ms   8.8x
   Incremental rebuild with no new CSS 35ms  192µs 182x

   The most impressive improvement is on incremental builds that don't
   actually need to compile any new CSS — these builds are over 100x
   faster and complete in microseconds. And the longer you work on a
   project, the more of these builds you run into because you're just
   using classes you've already used before, like flex, col-span-2, or
   font-bold.
     __________________________________________________________________

[32]Designed for the modern web

   The platform has evolved a lot since we released Tailwind CSS v3.0, and
   v4.0 takes full advantage of many of these improvements.
   CSS
@layer theme, base, components, utilities;@layer utilities {  .mx-6 {    margin-
inline: calc(var(--spacing) * 6);  }  .bg-blue-500\/50 {    background-color: co
lor-mix(in oklab, var(--color-blue-500) 50%, transparent);  }}@property --tw-gra
dient-from {  syntax: "<color>";  inherits: false;  initial-value: #0000;}

   We're leveraging modern CSS features like:
     * Native cascade layers — giving us more control than ever over how
       different style rules interact with each other.
     * Registered custom properties — making it possible to do things like
       animate gradients, and significantly improving performance on large
       pages.
     * color-mix() — which lets us adjust the opacity of any color value,
       including CSS variables and currentColor.
     * Logical properties — simplifying RTL support and reducing the size
       of your generated CSS.

   Many of these features have even simplified Tailwind internally,
   reducing the surface area for bugs and making the framework easier for
   us to maintain.
     __________________________________________________________________

[33]Simplified installation

   We've streamlined the setup process a ton in v4.0, reducing the number
   of steps and removing a lot of boilerplate.
   1. Install Tailwind CSS
npm i tailwindcss @tailwindcss/postcss;

   2. Add the PostCSS plugin
export default {  plugins: ["@tailwindcss/postcss"],};

   3. Import Tailwind in your CSS
@import "tailwindcss";

   With the improvements we've made to this process for v4.0, Tailwind
   feels more light-weight than ever:
     * Just one-line of CSS — no more @tailwind directives, just add
       @import "tailwindcss" and start building.
     * Zero configuration — you can start using the framework without
       configuring anything, not even the paths to your template files.
     * No external plugins required — we bundle @import rules for you out
       of the box, and use [34]Lightning CSS under the hood for vendor
       prefixing and modern syntax transforms.

   Sure you only go through this once per project, but it adds up when
   you're starting and abandoning a different side-project every weekend.

[35]First-party Vite plugin

   If you're a Vite user, you can now integrate Tailwind using
   [36]@tailwindcss/vite instead of PostCSS:
   vite.config.ts
import { defineConfig } from "vite";import tailwindcss from "@tailwindcss/vite";
export default defineConfig({  plugins: [    tailwindcss(),  ],});

   Tailwind CSS v4.0 is incredibly fast when used as a PostCSS plugin, but
   you'll get even better performance using the Vite plugin.

[37]Automatic content detection

   You know how you always had to configure that annoying content array in
   Tailwind CSS v3? In v4.0, we came up with a bunch of heuristics for
   detecting all of that stuff automatically so you don’t have to
   configure it at all.

   For example, we automatically ignore anything in your .gitignore file
   to avoid scanning dependencies or generated files that aren’t under
   version control:
   .gitignore
/node_modules/coverage/.next//build

   We also automatically ignore all binary extensions like images, videos,
   .zip files, and more.

   And if you ever need to explicitly add a source that's excluded by
   default, you can always add it with the @source directive, right in
   your CSS file:
   CSS
@import "tailwindcss";@source "../node_modules/@my-company/ui-lib";

   The @source directive uses the same heuristics under the hood, so it
   will exclude binary file types for example as well, without you having
   to specify all of the extensions to scan explicitly.

   Learn more about in our new documentation on [38]detecting classes in
   source files.
     __________________________________________________________________

[39]Built-in import support

   Before v4.0, if you wanted to inline other CSS files using @import
   you'd have to configure another plugin like postcss-import to handle it
   for you.

   Now we handle this out of the box, so you don't need any other tools:
   postcss.config.js
export default {  plugins: [    "postcss-import",    "@tailwindcss/postcss",  ],
};

   Our import system is purpose-built for Tailwind CSS, so we've also been
   able to make it even faster by tightly integrating it with our engine.
     __________________________________________________________________

[40]CSS-first configuration

   One of the biggest changes in Tailwind CSS v4.0 is the shift from
   configuring your project in JavaScript to configuring it in CSS.

   Instead of a tailwind.config.js file, you can configure all of your
   customizations directly in the CSS file where you import Tailwind,
   giving you one less file to worry about in your project:
   CSS
@import "tailwindcss";@theme {  --font-display: "Satoshi", "sans-serif";  --brea
kpoint-3xl: 1920px;  --color-avocado-100: oklch(0.99 0 0);  --color-avocado-200:
 oklch(0.98 0.04 113.22);  --color-avocado-300: oklch(0.94 0.11 115.03);  --colo
r-avocado-400: oklch(0.92 0.19 114.08);  --color-avocado-500: oklch(0.84 0.18 11
7.33);  --color-avocado-600: oklch(0.53 0.12 118.34);  --ease-fluid: cubic-bezie
r(0.3, 0, 0, 1);  --ease-snappy: cubic-bezier(0.2, 0, 0, 1);  /* ... */}

   The new CSS-first configuration lets you do just about everything you
   could do in your tailwind.config.js file, including configuring your
   design tokens, defining custom utilities and variants, and more.

   To learn more about how it all works, read the new [41]theme variables
   documentation.
     __________________________________________________________________

[42]CSS theme variables

   Tailwind CSS v4.0 takes all of your design tokens and makes them
   available as CSS variables by default, so you can reference any value
   you need at run-time using just CSS.

   Using the example @theme from earlier, all of these values will be
   added to your CSS to as regular custom properties:
   Generated CSS
:root {  --font-display: "Satoshi", "sans-serif";  --breakpoint-3xl: 1920px;  --
color-avocado-100: oklch(0.99 0 0);  --color-avocado-200: oklch(0.98 0.04 113.22
);  --color-avocado-300: oklch(0.94 0.11 115.03);  --color-avocado-400: oklch(0.
92 0.19 114.08);  --color-avocado-500: oklch(0.84 0.18 117.33);  --color-avocado
-600: oklch(0.53 0.12 118.34);  --ease-fluid: cubic-bezier(0.3, 0, 0, 1);  --eas
e-snappy: cubic-bezier(0.2, 0, 0, 1);  /* ... */}

   This makes it easy to reuse these values as inline styles or pass them
   to libraries like [43]Motion to animate them.
     __________________________________________________________________

[44]Dynamic utility values and variants

   We've simplified the way many utilities and variants work in v4.0 by
   effectively allowing them to accept certain types of arbitrary values,
   without the need for any configuration or dropping down to the
   arbitrary value syntax.

   For example, in Tailwind CSS v4.0 you can create grids of any size out
   of the box:
   HTML
<div class="grid grid-cols-15">  <!-- ... --></div>

   You can also target custom boolean data attributes without needing to
   define them:
   HTML
<div data-current class="opacity-75 data-current:opacity-100">  <!-- ... --></di
v>

   Even spacing utilities like px-*, mt-*, w-*, h-*, and more are now
   dynamically derived from a single spacing scale variable and accept any
   value out of the box:
   Generated CSS
@layer theme {  :root {    --spacing: 0.25rem;  }}@layer utilities {  .mt-8 {
 margin-top: calc(var(--spacing) * 8);  }  .w-17 {    width: calc(var(--spacing)
 * 17);  }  .pr-29 {    padding-right: calc(var(--spacing) * 29);  }}

   The upgrade tool we released alongside v4.0 will even simplify most of
   these utilities for you automatically if it notices you using an
   arbitrary value that's no longer needed.
     __________________________________________________________________

[45]Modernized P3 color palette

   We've upgraded the entire default color palette from rgb to oklch,
   taking advantage of the wider gamut to make the colors more vivid in
   places where we were previously limited by the sRGB color space.

   We've tried to keep the balance between all the colors the same as it
   was in v3, so even though we've refreshed things across the board, it
   shouldn't feel like a breaking change when upgrading your existing
   projects.
     __________________________________________________________________

[46]Container queries

   We've brought container query support into core for v4.0, so you don't
   need the @tailwindcss/container-queries plugin anymore:
   HTML
<div class="@container">  <div class="grid grid-cols-1 @sm:grid-cols-3 @lg:grid-
cols-4">    <!-- ... -->  </div></div>

   We've also added support for max-width container queries using the new
   @max-* variant:
   HTML
<div class="@container">  <div class="grid grid-cols-3 @max-md:grid-cols-1">
<!-- ... -->  </div></div>

   Like our regular breakpoint variants, you can also stack @min-* and
   @max-* variants to define container query ranges:
   HTML
<div class="@container">  <div class="flex @min-md:@max-xl:hidden">    <!-- ...
-->  </div></div>

   Learn more in our all-new [47]container queries documentation.
     __________________________________________________________________

[48]New 3D transform utilities

   We've finally added APIs for doing 3D transforms, like rotate-x-*,
   rotate-y-*, scale-z-*, translate-z-*, and tons more.

   Mar 16, 2020
   Michael Foster

   Boost your conversion rate
<div class="perspective-distant">  <article class="rotate-x-51 rotate-z-43 trans
form-3d ...">    <!-- ... -->  </article></div>

   Check out the updated [49]transform-style, [50]rotate, [51]perspective,
   and [52]perspective-origin documentation to get started.
     __________________________________________________________________

[53]Expanded gradient APIs

   We've added a ton of new gradient features in v4.0, so you can pull off
   even fancier effects without having to write any custom CSS.

[54]Linear gradient angles

   Linear gradients now support angles as values, so you can use utilities
   like bg-linear-45 to create a gradient on a 45 degree angle:
<div class="bg-linear-45 from-indigo-500 via-purple-500 to-pink-500"></div>

   You may notice we've renamed bg-gradient-* to bg-linear-* too — you'll
   see why shortly!

[55]Gradient interpolation modifiers

   We've added the ability to control the color interpolation mode for
   gradients using a modifier, so a class like bg-linear-to-r/srgb
   interpolates using sRGB, and bg-linear-to-r/oklch interpolates using
   OKLCH:
<div class="bg-linear-to-r/srgb from-indigo-500 to-teal-400">...</div><div class
="bg-linear-to-r/oklch from-indigo-500 to-teal-400">...</div>

   Using polar color spaces like OKLCH or HSL can lead to much more vivid
   gradients when the from-* and to-* colors are far apart on the color
   wheel. We're using OKLAB by default in v4.0 but you can always
   interpolate using a different color space by adding one of these
   modifiers.

[56]Conic and radial gradients

   We've added new bg-conic-* and bg-radial-* utilities for creating conic
   and radial gradients:
<div class="size-24 rounded-full bg-conic/[in_hsl_longer_hue] from-red-600 to-re
d-600"></div><div class="size-24 rounded-full bg-radial-[at_25%_25%] from-white
to-zinc-900 to-75%"></div>

   These new utilities work alongside the existing from-*, via-*, and to-*
   utilities to let you create conic and radial gradients the same way you
   create linear gradients, and include modifiers for setting the color
   interpolation method and arbitrary value support for controlling
   details like the gradient position.
     __________________________________________________________________

[57]@starting-style support

   The new starting variant adds support for the new CSS
   [58]@starting-style feature, making it possible to transition element
   properties when an element is first displayed:

<div>  <button popovertarget="my-popover">Check for updates</button>  <div popov
er id="my-popover" class="transition-discrete starting:open:opacity-0 ...">    <
!-- ... -->  </div></div>

   With @starting-style, you can finally animate elements as they appear
   on the page without the need for any JavaScript at all. [59]Browser
   support probably isn't quite there yet for most teams, but we're
   getting close!
     __________________________________________________________________

[60]not-* variant

   We've added a new not-* variant which finally adds support for the CSS
   :not() pseudo-class:
   HTML
<div class="not-hover:opacity-75">  <!-- ... --></div>

   CSS
.not-hover\:opacity-75:not(*:hover) {  opacity: 75%;}@media not (hover: hover) {
  .not-hover\:opacity-75 {    opacity: 75%;  }}

   It does double duty and also lets you negate media queries and
   @supports queries:
   HTML
<div class="not-supports-hanging-punctuation:px-4">  <!-- ... --></div>

   CSS
.not-supports-hanging-punctuation\:px-4 {  @supports not (hanging-punctuation: v
ar(--tw)) {    padding-inline: calc(var(--spacing) * 4);  }}

   Check out the new [61]not-* documentation to learn more.
     __________________________________________________________________

[62]Even more new utilities and variants

   We've added a ton of other new utilities and variants to v4.0 too,
   including:
     * New [63]inset-shadow-* and [64]inset-ring-* utilities — making it
       possible to stack up to four layers of box shadows on a single
       element.
     * New [65]field-sizing utilities — for auto-resizing textareas
       without writing a single line of JavaScript.
     * New [66]color-scheme utilities — so you can finally get rid of
       those ugly light scrollbars in dark mode.
     * New [67]font-stretch utilities — for carefully tweaking variable
       fonts that support different widths.
     * New [68]inert variant — for styling non-interactive elements marked
       with the inert attribute.
     * New [69]nth-* variants — for doing really clever things you'll
       eventually regret.
     * New [70]in-* variant — which is a lot like group-*, but without the
       need for the group class.
     * Support for [71]:popover-open — using the existing open variant to
       also target open popovers.
     * New [72]descendant variant — for styling all descendant elements,
       for better or for worse.

   Check out the relevant documentation for all of these features to learn
   more.
     __________________________________________________________________

   And that's it — that's Tailwind CSS v4.0. It's been years of work to
   get to this point, but we're all extremely proud of this release and we
   can't wait to see what you build with it.

   Check it out, play with it, maybe even break it, and definitely let us
   know what you think.

   Just no bug reports until tomorrow please — let us at least enjoy one
   celebratory team dinner and maybe relax in the hot tub at this hotel
   for a bit believing that somehow we really did ship flawless software.

Get all of our updates directly to your inbox.
Sign up for our newsletter.

   ____________________
   (BUTTON) Subscribe

Tailwind CSS

     * [73]Documentation
     * [74]Playground
     * [75]Blog
     * [76]Showcase
     * [77]Sponsor

Resources

     * [78]Refactoring UI
     * [79]Headless UI
     * [80]Heroicons
     * [81]Hero Patterns

[82]Tailwind Plus

     * [83]UI Blocks
     * [84]Templates
     * [85]UI Kit

Community

     * [86]GitHub
     * [87]Discord
     * [88]X

Tailwind CSS

     * [89]Documentation
     * [90]Playground
     * [91]Blog
     * [92]Showcase
     * [93]Sponsor

[94]Tailwind Plus

     * [95]UI Blocks
     * [96]Templates
     * [97]UI Kit

Resources

     * [98]Refactoring UI
     * [99]Headless UI
     * [100]Heroicons
     * [101]Hero Patterns

Community

     * [102]GitHub
     * [103]Discord
     * [104]X

   Copyright © 2025 Tailwind Labs Inc.·[105]Trademark Policy

References

   Visible links:
   1. file:///feeds/feed.xml
   2. file:///feeds/atom.xml
   3. file:///feeds/feed.json
   4. file:///docs
   5. file:///blog
   6. file:///showcase
   7. file:///sponsor
   8. file:///plus?ref=top
   9. https://twitter.com/adamwathan
  10. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#new-high-performance-engine
  11. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#designed-for-the-modern-web
  12. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#simplified-installation
  13. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#first-party-vite-plugin
  14. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#automatic-content-detection
  15. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#built-in-import-support
  16. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#css-first-configuration
  17. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#css-theme-variables
  18. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#dynamic-utility-values-and-variants
  19. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#modernized-p3-color-palette
  20. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#container-queries
  21. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#new-3d-transform-utilities
  22. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#expanded-gradient-apis
  23. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#starting-style-support
  24. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#not-variant
  25. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#even-more-new-utilities-and-variants
  26. file:///docs/installation
  27. https://play.tailwindcss.com/
  28. file:///docs/upgrade-guide
  29. file:///docs/upgrade-guide#using-the-upgrade-tool
  30. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#new-high-performance-engine
  31. https://tailwindui.com/templates/catalyst
  32. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#designed-for-the-modern-web
  33. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#simplified-installation
  34. https://lightningcss.dev/
  35. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#first-party-vite-plugin
  36. file:///docs/installation/using-vite
  37. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#automatic-content-detection
  38. file:///docs/detecting-classes-in-source-files
  39. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#built-in-import-support
  40. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#css-first-configuration
  41. file:///docs/theme
  42. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#css-theme-variables
  43. https://motion.dev/docs/react-animation#css-variables
  44. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#dynamic-utility-values-and-variants
  45. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#modernized-p3-color-palette
  46. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#container-queries
  47. file:///docs/responsive-design#container-queries
  48. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#new-3d-transform-utilities
  49. file:///docs/transform-style
  50. file:///docs/rotate
  51. file:///docs/perspective
  52. file:///docs/perspective-origin
  53. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#expanded-gradient-apis
  54. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#linear-gradient-angles
  55. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#gradient-interpolation-modifiers
  56. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#conic-and-radial-gradients
  57. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#starting-style-support
  58. https://developer.mozilla.org/en-US/docs/Web/CSS/@starting-style
  59. https://caniuse.com/mdn-css_at-rules_starting-style
  60. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#not-variant
  61. file:///docs/hover-focus-and-other-states#not
  62. file:///workspace/effusion-labs/src/content/docs/knowledge/tailwind-v4-20250913T180254Z.html#even-more-new-utilities-and-variants
  63. file:///docs/box-shadow#adding-an-inset-shadow
  64. file:///docs/box-shadow#adding-an-inset-ring
  65. file:///docs/field-sizing
  66. file:///docs/color-scheme
  67. file:///docs/font-stretch
  68. file:///docs/hover-focus-and-other-states#styling-inert-elements
  69. file:///docs/hover-focus-and-other-states#first-last-odd-and-even
  70. file:///docs/hover-focus-and-other-states#implicit-groups
  71. file:///docs/hover-focus-and-other-states#openclosed-state
  72. file:///docs/hover-focus-and-other-states#styling-all-descendants
  73. file:///docs
  74. https://play.tailwindcss.com/
  75. file:///blog
  76. file:///showcase
  77. file:///sponsor
  78. https://www.refactoringui.com/
  79. https://headlessui.com/
  80. https://heroicons.com/
  81. https://heropatterns.com/
  82. file:///plus?ref=footer
  83. file:///plus/ui-blocks?ref=footer
  84. file:///plus/templates?ref=footer
  85. file:///plus/ui-kit?ref=footer
  86. https://github.com/tailwindlabs/tailwindcss
  87. file:///sponsor#insiders
  88. https://x.com/tailwindcss
  89. file:///docs
  90. https://play.tailwindcss.com/
  91. file:///blog
  92. file:///showcase
  93. file:///sponsor
  94. file:///plus?ref=footer
  95. file:///plus/ui-blocks?ref=footer
  96. file:///plus/templates?ref=footer
  97. file:///plus/ui-kit?ref=footer
  98. https://www.refactoringui.com/
  99. https://headlessui.com/
 100. https://heroicons.com/
 101. https://heropatterns.com/
 102. https://github.com/tailwindlabs/tailwindcss
 103. file:///sponsor#insiders
 104. https://x.com/tailwindcss
 105. file:///brand

   Hidden links:
 107. file://localhost/
 108. https://github.com/tailwindlabs/tailwindcss
