# nginx.conf â€” Eleventy static site with fluid caching (no fingerprints, no versioning)

user nginx;
worker_processes auto;

events { worker_connections 1024; }

http {
  include mime.types;
  default_type application/octet-stream;

  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  etag on;
  if_modified_since exact;
  server_tokens off;

  gzip on;
  gzip_vary on;
  gzip_proxied any;
  gzip_comp_level 6;
  gzip_types text/plain text/css application/javascript application/json application/xml image/svg+xml font/woff2;
  gzip_static on;

  server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    location ~* \.(?:js|css|mjs|png|jpe?g|gif|ico|svg|webp|avif|woff2?|ttf|otf|eot)$ {
      try_files $uri =404;
      access_log off;
      add_header Cache-Control "public, max-age=0, must-revalidate" always;
      add_header Vary "Accept-Encoding" always;
      expires off;
    }

    location ~* \.(?:json|xml|txt|webmanifest|map)$ {
      try_files $uri =404;
      access_log off;
      add_header Cache-Control "public, max-age=0, must-revalidate" always;
      add_header Vary "Accept-Encoding" always;
      expires off;
    }

    location ~* ^/(?:sw|service-worker)\.js$ {
      try_files $uri =404;
      add_header Cache-Control "no-cache, must-revalidate" always;
      add_header Vary "Accept-Encoding" always;
      expires off;
    }

    location ~* \.html?$ {
      try_files $uri =404;
      add_header Cache-Control "no-cache, must-revalidate" always;
      add_header Vary "Accept-Encoding" always;
      expires off;
    }

    location / {
      try_files $uri $uri/ /index.html;
      add_header Cache-Control "no-cache, must-revalidate" always;
      add_header Vary "Accept-Encoding" always;
      expires off;
    }

    location ^~ /.well-known/ {
      allow all;
      try_files $uri =404;
      add_header Cache-Control "public, max-age=0, must-revalidate" always;
    }

    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Permissions-Policy "interest-cohort=()" always;
  }
}
